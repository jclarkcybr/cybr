meta {
  name: Retrieve Applications by Site
  type: http
  seq: 1
}

get {
  url: https://{{remoteAccessBaseUrl}}/v1-edge/sites/{{siteId}}/applications
  body: none
  auth: none
}

query {
  ~offset: 0
  ~limit: 100
}

vars:pre-request {
  siteId: 
}

assert {
  res.body: isJson
  res.status: eq 200
}

script:pre-request {
  const remoteAccessAuth = require('./tools/remoteAccessAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings remoteAccessAuth.js tools
  await remoteAccessAuth.login();
  
  // Sets Remote Access Site ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('siteId', bru.getEnvVar('testRemoteAccessSiteId'));
    tools.log('Remote Access Site Id Set: ' + bru.getVar('siteId'))
  }
}

docs {
  ## Get Remote Access Tenant's Sites - v1
  Retrieves a list of tenant sites
  
  ### URL
  https://api.alero.io/v1-edge/sites/{siteId}/applications
  
  #### Resource Information
  | HTTP Method | GET |
  | :-- | :-- |
  
  #### URL Path Parameters
  | Parameter | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | siteId | string | yes | Unique Site ID to retreive applications for |
  
  #### URL Query Parameters
  | Parameter | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | offset | integer | no | Starting activity offset. Default: 0 |
  | limit | integer | no | Limit number or returned Activities. Default: 100 | 
  
  ### Request
  #### Request Header
  | Request Header | Field Definition |
  | :-- | :-- |
  | Authorization | Bearer eyEXAMPLErQ |
  
  #### Request Body
  None
  
  ### Response
  
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | OK |
  | 400 | Custom Error |
  | 401 | Unauthorized |
  | 404 | Not Found |
  | 500 | Internal Server Error |
  
  #### 200 OK
  ```
  {
    "applications": [
      {
        "id": "string",
        "name": "string",
        "authenticationMethod": "SAML",
        "createdByUserId": "string",
        "creationTime": 0,
        "lastUpdatedByUserId": "string",
        "lastUpdateTime": 0,
        "logo": "string",
        "internalUri": "string",
        "certificateId": "string",
        "externalUri": "string",
        "nestedApplications": [
          {
            "externalUri": "string",
            "internalUri": "string",
            "certificateId": "string"
          }
        ],
        "enabled": true
      }
    ],
    "totalCount": 0
  }
  ```
}
