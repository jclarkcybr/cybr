meta {
  name: Retrieve Issuer
  type: http
  seq: 3
}

get {
  url: https://{{identityTenantName}}.secretsmgr.cyberark.cloud/api/issuers/conjur/{{issuer-id}}
  body: none
  auth: none
}

vars:pre-request {
  issuer-id: bruno-aws-issuer1
}

script:pre-request {
  const conjurTokenAuth = require('./tools/conjurTokenAuth');
  
  // Perform authentication usings conjurTokenAuth.js tools
  await conjurTokenAuth.conjurLogin();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.error.code) {
      tools.log('Error Code: ' + res.body.error.code);
    }
    if (res.body.error.message) {
      tools.log('Error Message: ' + res.body.error.message);
    }
    if (res.body.error.target) {
      tools.log('Error Target: ' + res.body.error.target);
    }
    if (res.body.error.details) {
      if (res.body.error.details.code) {
        tools.log('Error Details - Code: ' + res.body.error.details.code);
      }
      if (res.body.error.details.target) {
        tools.log('Error Details - Target: ' + res.body.error.details.target);
      }
      if (res.body.error.details.message) {
        tools.log('Error Details - Message: ' + res.body.error.details.message);
      }
    }
  }
}

docs {
  ## Retrieve Issuer
  This API retrieves information about an issuer, including when it was created and modified.
  
  ### URL
  https://<subdomain>.secretsmgr.cyberark.com/api/api/issuers/conjur/{{issuer-id}}
  
  #### Resource Information
  | HTTP Method | GET |
  | :-- | :-- |
  
  #### URL Parameters
  | Parameter | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | issuer-id | string | yes | The id of the issuer. **Example:** bruno-aws-issuer | 
  
  #### Example URI
  > GET https://<subdomain>.secretsmgr.cyberark.com/api/api/issuers/conjur/bruno-aws-issuer
  
  ### Request Details
  #### Request Body
  None
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | The issuer was found |
  | 404 | Issuer not found |
  | 500 | Internal server error |
  
  #### 200 Success
  ```
  {
    "id": "bruno-aws-issuer",
    "max_ttl": 3600,
    "type": "aws",
    "data": {
      "access_key_id": "AKIAIOSFODNN7EXAMPLE",
      "secret_access_key": "*****"
    },
    "created_at": "2024-10-17T16:52:14.271+00:00",
    "modified_at": "2024-10-17T16:52:14.277+00:00"
  }
  ```
  
  #### 404 Not Found
  ```
  {
    "error": {
      "code": "not_found",
      "message": "Issuer not found",
      "target": null,
      "details": {
        "code": "not_found",
        "target": "id",
        "message": "bruno-aws-issuer1"
      }
    }
  }
  ```
}
