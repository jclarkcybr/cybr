meta {
  name: Enable Authenticator
  type: http
  seq: 2
}

patch {
  url: https://{{identityTenantName}}.secretsmgr.cyberark.cloud/api/{{authenticator-type}}/{{service-id}}/conjur
  body: text
  auth: none
}

body:text {
  enabled=true
}

vars:pre-request {
  authenticator-type: authn-jwt
  service-id: example-service
}

assert {
  res.status: eq 204
}

script:pre-request {
  const conjurTokenAuth = require('./tools/conjurTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings conjurTokenAuth.js tools
  await conjurTokenAuth.conjurLogin();
  
  // Sets service-id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('service-id', bru.getEnvVar('testConjurCloudServiceId'));
    tools.log('Service-id: ' + bru.getVar('service-id'))
  }
}

docs {
  ## Enable Authenticator
  Enables configured authenticators in Conjur Cloud.
  > **NOTE:**
  > - You can also enable and disable Conjur Cloud authenticators using the Conjur Cloud CLI. 
  > - For details see Enable or disable authenticators.
  
  ### URL
  https://<subdomain>.secretsmgr.cyberark.com/api/{authenticator-type}/{service-id}/conjur/status
  
  ### Resource Information
  | HTTP Method | PATCH |
  | :-- | :-- |
  
  
  ### Parameters
  | Parameter | Location | Description |
  | :-- | :-- | :-- |
  | Content Type | Header | application/x-www-form-urlencoded  |
  | authenticatory-type | Path | The type of authenticator, for example authn-azure, authn-gcp, authn-iam, authn-jwt |
  | service-id | Path | The ID of the authenticator endpoint, for example AzureWS1 **Note:** Not relevant for GCP Authenticator |
  
  ### Request Body (text/plain)
  | Name | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | enabled | boolean | yes | Enable or disable the authenticator. **Valid Values:** true/false |
  
  #### Example Body
  > enabled=true
  
  ### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 204 | The authenticator was allowlisted in Conjur Cloud successfully |
  | 401 | The request lacks valid authentication credentials or the service ID does not exist | 
  | 404 | The authenticated user lacks the necessary privileges |
}
