meta {
  name: Get Static Secret Details
  type: http
  seq: 2
}

get {
  url: https://{{identityTenantName}}.secretsmgr.cyberark.cloud/api/secrets/static/{{branch}}/{{secret-name}}
  body: none
  auth: none
}

headers {
  Accept: application/x.secretsmgr.v2+json
}

body:json {
  {
    "branch": "data/bruno/api-testing",
    "name": "api-gen-secret",
    "value": "SuperExampleSecret",
    "mime_type": "text/plain",
    "annotations": [
      {
        "name": "description",
        "value": "Secret created using the V2 API for Testing"
      }
    ],
    "permissions": [
      {
        "subject": {
          "id": "data/bruno/api-testing/api-testing-host-group",
          "kind": "group"
        },
        "privileges": [
          "read"
        ]
      }
    ]
  }
}

vars:pre-request {
  branch: data%2Fbruno%2Fapi-testing
  secret-name: api-gen-secret
}

assert {
  res.body: isJson
  res.status: eq 200
}

script:pre-request {
  const conjurTokenAuth = require('./tools/conjurTokenAuth');
  
  // Perform authentication usings conjurTokenAuth.js tools
  await conjurTokenAuth.conjurLogin();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.error.code) {
      tools.log('Error Code: ' + res.body.error.code);
    }
    if (res.body.error.message) {
      tools.log('Error Message: ' + res.body.error.message);
    }
    if (res.body.error.target) {
      tools.log('Error Target: ' + res.body.error.target);
    }
    if (res.body.error.details) {
      if (res.body.error.details.code) {
        tools.log('Error Details - Code: ' + res.body.error.details.code);
      }
      if (res.body.error.details.target) {
        tools.log('Error Details - Target: ' + res.body.error.details.target);
      }
      if (res.body.error.details.message) {
        tools.log('Error Details - Message: ' + res.body.error.details.message);
      }
    }
  }
}

docs {
  ## Get static secret details
  Retrieves the details of a static secret.
  
  ### URL
  https://<subdomain>.secretsmgr.cyberark.com/api/secrets/static/{branch}/{secret-name}
  
  #### Resource Information
  | HTTP Method | GET |
  | :-- | :-- |
  
  #### URL Parameters
  None
  
  #### Example URI
  > POST https://<subdomain>.secretsmgr.cyberark.cloud/api/secrets/static/data/bruno/api-testing/api-gen-secret
  
  ### Request
  #### Request Header
  Must include the following Accept request header, which indicates that the API belongs to Conjur Cloud API v2, and that the body is a JSON object
  | Request Header | Field Definition |
  | :-- | :-- |
  | Accept | application/x.secretsmgr.v2+json |
  
  #### URI Path Parameters
  | Parameter | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | branch | string | yes |	The policy branch under which the static secret resides. Branch always starts with **data**. **Invalid parent branches:** data/dynamic/\*, data/vault/\*. *Any path included in the URL must be URL-encoded to be recognized by the Conjur Cloud API.* | 
  | secret-name | string | yes | The identity (name) of the static secret | 
  
  ### Example Request Body
  None
  
  ### Response
  
  #### Response Header
  Includes the following Content-Type response header, which indicates that the API belongs to Conjur Cloud API v2, and that the body is a JSON object
  | Response Header | Field Definition |
  | :-- | :-- |
  | Content-Type | application/x.secretsmgr.v2+json |
  
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | The static secret's details were successfully retrieved |
  | 400 | Invalid Request |
  | 401 | Not Authorized | 
  | 403 | The authenticated user doesn't have the necessary permission to perform this action |
  | 404 | CThe specified secret wasn't found |
  | 422 | The request couldn't be processed |
  | 500 | Internal server error |
  
  #### 200 Success
  > **NOTE** The value of the secret is not included in the response.
  ```
  {
    "branch": "/data/bruno/api-testing",
    "name": "api-gen-secret",
    "mime_type": "text/plain",
    "annotations": [
      {
        "name": "description",
        "value": "Secret created using the V2 API for Testing"
      }
    ],
    "permissions": [
      {
        "subject": {
          "id": "data/bruno/api-testing/api-testing-host-group",
          "kind": "group"
        },
        "privileges": [
          "read"
        ]
      }
    ]
  }
  ```
  
  #### 400 Bad Request
  ```
  {
    "error": {
      "code": "bad_request",
      "message": "CONJ00194W The api belongs to v2 APIs but it missing the version \"application/x.secretsmgr.v2+json\" in the Accept header"
    }
  }
  ```
  
  #### 404 Not Found
  ```
  {
    "error": {
      "code": "not_found",
      "message": "Policy 'data/bruno/api-testing/' not found in account 'conjur'",
      "target": "policy",
      "details": {
        "code": "not_found",
        "target": "id",
        "message": "conjur:policy:data/bruno/api-testing/"
      }
    }
  }
  ```
  
}
