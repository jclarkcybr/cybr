meta {
  name: Edit a Discovery Rule Set
  type: http
  seq: 4
}

put {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/api/discovery-rule-sets/{{pasRuleSetId}}
  body: json
  auth: none
}

body:json {
  {
    "name": "Bru Rule Set Example",
    "trigger": {
      "type": "ACCOUNT_DISCOVERED",
      "conditions": [
        {
          "property": "type",
          "operator": "EQUALS",
          "value": "windows"
        },
        {
          "property": "hostname",
          "operator": "STARTS_WITH",
          "value": "brunew"
        }
      ]
    },
    "rules": [
      {
        "name": "Rule 1",
        "conditions": [
          {
            "property": "subType",
            "operator": "EQUALS",
            "value": "loosely"
          },
          {
            "property": "isPrivileged",
            "operator": "EQUALS",
            "value": "false"
          }
        ],
        "action": {
          "type": "ONBOARD",
          "parameters": {
            "platformId": "BRU-API-TEST-PLATFORM",
            "safeName": "BRU-API-TEST-SAFE"
          },
          "subActions": [
            {
              "type": "RESET",
              "parameters": {
                "reset": true
              }
            }
          ]
        }
      },
      {
        "name": "Rule 2",
        "conditions": [
          {
            "property": "source",
            "operator": "EQUALS",
            "value": "discovery management"
          },
          {
            "property": "network",
            "operator": "STARTS_WITH",
            "value": "bru"
          }
        ],
        "action": {
          "type": "ONBOARD",
          "parameters": {
            "platformId": "BRU-API-TEST-PLATFORM",
            "safeName": "BRU-API-TEST-SAFE"
          },
          "subActions": []
        }
      }
    ],
    "status": "DRAFT"
  }
}

vars:pre-request {
  pasPlatformName: BRU-API-TEST-PLATFORM
  pasSafeName: BRU-API-TEST-SAFE
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  This method updates an existing discovery rule set.
}
