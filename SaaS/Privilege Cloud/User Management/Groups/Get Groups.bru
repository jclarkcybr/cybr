meta {
  name: Get Groups
  type: http
  seq: 1
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/usergroups
  body: none
  auth: none
}

query {
  ~search: Fun
  ~filter: groupType eq <Directory|vault>
  ~sort: groupname <asc|desc>
  ~includeMembers: false
}

assert {
  res.status: eq 200
  res.body: isJson
  res.body.count: isNumber
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  This method returns a list of all existing user groups.
  
  The user running this Web service must have Audit users permissions.
  
  Groups on the same level as your user or lower in the Privilege Cloud hierarchy are retrieved.
  
  Note:
    - The groups that are returned depends on the HideVaultUsersTree parameter is defined in the dpbaram.ini file. 
      - If HideVaultUsersTree is set to No, all groups are returned (instead of only those on the same level or lower in the Vault hierarchy). 
      - If HideVaultUsersTree is set to Yes, only auditors and managers are allowed to get all groups.
    - Retrieving more than 1,000 groups may cause a slowdown in the response.
}
