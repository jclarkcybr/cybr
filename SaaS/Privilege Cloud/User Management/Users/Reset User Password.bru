meta {
  name: Reset User Password
  type: http
  seq: 4
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/users/{{pasUserId}}/resetpassword
  body: json
  auth: none
}

body:json {
  {
    "id": "{{pasUserId}}",
    "newPassword": "{{pasNewPassword}}"
  }
}

vars:pre-request {
  pasNewPassword: newPassword1234
}

assert {
  res.status: eq 200
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  This method resets an existing Vault user's password.
  
  Note:
    - Make sure there are no spaces in the URL.
    - The following characters are not supported in URL values: + & %
  
    - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  To run this Web service, you must have the following permissions:
    - Audit users
    - Reset Users' Passwords
  
  The user who runs this Web service must be in the same Vault Location or higher as the user whose password is being reset.
}
