meta {
  name: Update User
  type: http
  seq: 5
}

put {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/users/{{pasUserId}}
  body: json
  auth: none
}

body:json {
  {
    "enableUser": true,
    "changePassOnNextLogon": true,
    "expiryDate": 1577836800,
    "suspended": false,
    "lastSuccessfulLoginDate": 1712581371,
    "unAuthorizedInterfaces": [
      "PSMP",
      "PSM",
      "GUI"
    ],
    "authenticationMethod": [
      "AuthTypePass"
    ],
    "passwordNeverExpires": true,
    "distinguishedName": "newUser@cyberark",
    "description": "This user is privileged",
    "businessAddress": {
      "workStreet": "Hapssagot 9",
      "workCity": "Petah Tikva",
      "workState": "Israel",
      "workZip": "9999999",
      "workCountry": "Israel"
    },
    "internet": {
      "homePage": "Cyberark.com",
      "homeEmail": "user@gmail.com",
      "businessEmail": "user@cyberark.com",
      "otherEmail": "user2@gmail.com"
    },
    "phones": {
      "homeNumber": "555123456",
      "businessNumber": "555456789",
      "cellularNumber": "555789789",
      "faxNumber": "999999",
      "pagerNumber": "111111"
    },
    "personalDetails": {
      "street": "Dizzengof 56",
      "city": "Tel Aviv",
      "state": "Israel",
      "zip": "123456",
      "country": "Israel",
      "title": "Mr. VIP",
      "organization": "Cyber ark",
      "department": "R&D",
      "profession": "software development",
      "firstName": "John",
      "middleName": "Doe",
      "lastName": "Smith"
    },
    "id": "{{pasUserId}}",
    "username": "newUser",
    "source": "CyberArk",
    "userType": "EPVUser",
    "componentUser": false,
    "groupsMembership": [],
    "vaultAuthorization": [
      "AddSafes",
      "AuditUsers"
    ],
    "location": "\\"
  }
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
   if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  This method updates an existing user.
  
  To use this API, you must have the following authorizations:
    - Add/Update Users
    - In order to edit changePassOnNextLogon , you must have the Reset Password authorization.
}
