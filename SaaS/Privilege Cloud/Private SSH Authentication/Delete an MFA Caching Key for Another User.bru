meta {
  name: Delete an MFA Caching Key for Another User
  type: http
  seq: 5
}

delete {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/users/{{pasUserId}}/secret/sshkeys/cache
  body: none
  auth: none
}

vars:pre-request {
  pasUserId: 123
}

assert {
  res.status: eq 204
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets pasSafeMemberName for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('pasUserId', bru.getEnvVar('testPrivilegeCloudUserId'));
    tools.log('User Id: ' + bru.getVar('pasUserId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 204) {
    tools.log('Error Code: ' + res.body.ErrorCode);
    tools.log('Error Message: ' + res.body.ErrorMessage);
  }
}
