meta {
  name: Create Request
  type: http
  seq: 1
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/myrequests
  body: json
  auth: none
}

body:json {
  {
    "AccountID": "{{pasAccountId}}",
    "Reason": "Access requested via CyberArk Web Services"
  }
}

vars:pre-request {
  pasAccountId: 200_3
}

assert {
  res.status: eq 201
  res.body: isJson
  res.body.RequestID: isString
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets Requested Account ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('pasAccountId', bru.getEnvVar('testPrivilegeCloudAccountIdReq'));
    tools.log('Requested Account Id: ' + bru.getVar('pasAccountId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 201) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
  
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    // Save RequestID in Session Collection
    if (res.body.RequestID) {
      bru.setVar('pasRequestId', res.body.RequestID);
    }
  }
  
}

docs {
  This method creates an access request for a specific account. This account may be either a password account or an SSH Key account.
  
  Example Request:
  ```
  {
    "AccountID": "100_1",
    "Reason": "Access requested via CyberArk Web Services",
    "TicketingSystemName": "ServiceNow" 
  }
  ```
  
  Example Response:
  ```
  {
    "RequestID": "BRU-API-TEST-SAFE-ACCESS",
    "SafeName": "BRU-API-TEST-SAFE-ACCESS",
    "RequestorUserName": "example@cyberark.cloud.1234",
    "RequestorReason": "Access requested via CyberArk Web Services",
    "UserReason": "Access requested via CyberArk Web Services",
    "CreationDate": 1712881638,
    "Operation": "Retrieve password BRU-API-TEST-PLATFORM-REQ-bru.user-example.local",
    "ExpirationDate": 1715473638,
    "OperationType": 4,
    "AccessType": "OneTime",
    "ConfirmationsLeft": 1,
    "AccessFrom": 0,
    "AccessTo": 0,
    "Status": 1,
    "StatusTitle": "Waiting: 1 more user(s) must confirm the request",
    "InvalidRequestReason": 0,
    "CurrentConfirmationLevel": 1,
    "RequiredConfirmersCountLevel2": 1,
    "TicketingSystemProperties": {
      "Name": "ServiceNow",
      "Number": null,
      "Status": null
    },
    "AdditionalInfo": {},
    "AccountDetails": {
      "AccountID": "100_1",
      "Properties": {
        "Address": "example.local",
        "Safe": "BRU-API-TEST-SAFE-ACCESS",
        "Folder": "Root",
        "Name": "Operating System-BRU-API-TEST-PLATFORM-REQ-example.local-bru.user",
        "PolicyID": "BRU-API-TEST-PLATFORM-REQ",
        "PlatformName": "BRU-API-TEST-PLATFORM-REQ",
        "DeviceType": "Operating System",
        "LastVerifiedDate": "1712778534000",
        "LastModifiedDate": "1712777622000",
        "LastModifiedBy": "N/A",
        "LastUsedDate": "1712778477000",
        "LastUsedBy": "N/A",
        "Tags": "AWS; BRUNO",
        "UserName": "bru.user2",
        "Location": "AWS",
        "LogonDomain": "EXAMPLE",
        "OwnerName": "Bruno API Testing",
        "LockedBy": "",
        "CPMDisabled": "",
        "CPMStatus": "success",
        "ManagedByCPM": "True",
        "DeletedBy": "",
        "DeletionDate": "0",
        "ImmediateCPMTask": "NoTask",
        "LastCPMTask": "VerifyTask",
        "CreationDate": "1712777622",
        "IsSSHKey": "False",
        "IsIrregularPlatform": "False",
        "RetriesCount": "-1",
        "CreationMethod": "PVWA",
        "LastSuccessVerification": "1712778534",
        "LastTask": "VerifyTask"
      }
    },
    "Confirmers": [
      {
        "Type": 1,
        "ID": -1,
        "Name": "N/A",
        "Action": 2,
        "Reason": "",
        "ActionDate": 0,
        "AdditionalDetails": {},
        "Members": null
      }
    ]
  }
  ```
}
