meta {
  name: Get Safe Member
  type: http
  seq: 4
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/safes/{{pasSafeUrlId}}/members/{{pasSafeMemberName}}/
  body: none
  auth: none
}

query {
  ~useCache: true
}

vars:pre-request {
  pasSafeUrlId: example-safe
  pasSafeMemberName: example@example.com
}

assert {
  res.status: eq 200
  res.body: isJson
  res.body.safeNumber: isNumber
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets pasSafeMemberName for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('pasSafeMemberName', bru.getEnvVar('testPrivilegeCloudUserName'));
    bru.setVar('pasSafeUrlId', bru.getEnvVar('testSafeName'));
    tools.log('MemberName: ' + bru.getVar('pasSafeMemberName'))
    tools.log('SafeName: ' + bru.getVar('pasSafeUrlId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}
