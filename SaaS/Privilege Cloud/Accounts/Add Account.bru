meta {
  name: Add Account
  type: http
  seq: 6
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/accounts
  body: json
  auth: none
}

body:json {
  {
    "name": "{{pasObjectName}}",
    "address": "{{pasAddress}}",
    "userName": "{{pasUsername}}",
    "platformId": "{{pasPlatformName}}",
    "safeName": "{{pasSafeName}}",
    "secretType": "password",
    "secret": "PassWord123!@#",
    "platformAccountProperties": {
      "LogonDomain": "EXAMPLE"
    },
    "secretManagement": {
      "automaticManagementEnabled": false,
      "manualManagementReason": "Example management disabled"
    },
    "remoteMachinesAccess": {
      "remoteMachines": "192.168.19.10,192.168.19.11",
      "accessRestrictedToRemoteMachines": true
    }
  }
}

vars:pre-request {
  pasSafeName: BRU-API-TEST-SAFE
  pasObjectName: BRU-OBJECT-NAME-1
  pasPlatformName: BRU-API-TEST-PLATFORM
  pasAddress: example.com
  pasUsername: example
}

assert {
  res.status: eq 201
  res.body: isJson
  res.body.createdTime: isNumber
  res.body.name: isString
}

script:pre-request {
  // Perform authentication usings platformToken.js tools
  const platformTokenAuth = require('./tools/platformTokenAuth');
  await platformTokenAuth.login();
}

script:post-response {
  // Stores pasAccountId in Session Collection for subsequent tests
  if (res.body.id) {
    bru.setVar('pasAccountId', res.body.id)
  }
}

docs {
  This method returns information about an account identified by its ID.
  
  The user who runs this web service requires List Accounts permissions in the Safe where the account is located inside the Vault.
}
