meta {
  name: Generate Password
  type: http
  seq: 5
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/accounts/{{pasAccountId}}/secret/generate/
  body: none
  auth: none
}

vars:pre-request {
  pasAccountId: 212_6
}

assert {
  res.status: eq 200
  res.body.Password: isString
  res.body: isJson
}

script:pre-request {
  // Perform authentication usings platformToken.js tools
  const platformTokenAuth = require('./tools/platformTokenAuth');
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
    tools.log('Error Code: ' + res.body.ErrorCode);
    tools.log('Error Message: ' + res.body.ErrorMessage);
  }
  
  // Stores pasAccountPassword in Session Collection for subsequent tests
  if (res.body.Password) {
    bru.setVar('pasAccountPassword',res.body.Password)
  }
}

docs {
  This method generates a new password for an existing account.
  
  The user must have Retrieve files from safe permissions for the safe where the account is stored. If using the PreventSameCharPerPrevPassPosition parameter, the user must have Use Password permissions.
}
