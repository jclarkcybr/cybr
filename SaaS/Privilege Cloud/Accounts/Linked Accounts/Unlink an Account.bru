meta {
  name: Unlink an Account
  type: http
  seq: 2
}

delete {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/accounts/{{pasAccountId}}/LinkAccount/{{pasExtraPasswordIndex}}
  body: none
  auth: none
}

vars:pre-request {
  pasExtraPasswordIndex: 1
}

assert {
  res.status: eq 200
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets Safe Name, Account Name for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('pasAccountId', bru.getEnvVar('testPrivilegeCloudAccountId'));
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
   if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  This method enables a user to remove the association between a linked account and a source account.
  
  To run this service, the user must have the following Safe member authorizations for the Safe where the source account is stored:
    - List accounts
    - Update account properties
    - Manage Safe - This authorization is needed only when RequireManageSafeToClearLinkedAccount is enabled in the configuration.
}
