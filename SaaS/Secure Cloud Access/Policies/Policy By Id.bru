meta {
  name: Policy By Id
  type: http
  seq: 3
}

get {
  url: https://{{identityTenantName}}.sca.cyberark.cloud/api/policies/{{policy_id}}
  body: none
  auth: none
}

headers {
  X-API-Version: 2.0
}

vars:pre-request {
  ~policy_id: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

docs {
  ## Get Policy
  This method returns information about a specific policy
  
  ### URL
  https://<subdomain>.sca.cyberark.com/api/policies/{policy_id}
  
  ### Parameters
  |Name|Location|Description|
  |:--|:--|:--|
  |X-API-Version|Header|Policy Version. Supported Values: 1.0, 2.0 (recommended)|
  |policy_id|path|The Policy ID you want to retrieve|
  
  ### Resource Information
  | HTTP Method | GET |
  | :-- | :-- |
  
  ### Request Body
  No Body
  
  ### Example Response
  ```
  {
    "policyId": "gcp_0e2bfd12-a123-2abc-1ac1-66d8dc31110e",
    "csp": "GCP",
    "name": "Example Policy Name",
    "description": "Example Description",
    "startDate": null,
    "endDate": null,
    "policyType": "pre_defined",
    "roles": [
      {
        "entityId": "roles/cloudjobdiscovery.admin",
        "workspaceType": "folder",
        "entitySourceId": "123410617123",
        "organizationId": "789272866123"
      },
      {
        "entityId": "roles/cloudjobdiscovery.admin",
        "workspaceType": "project",
        "entitySourceId": "prod-infra",
        "organizationId": "789272866123"
      }
    ],
    "identities": [
      {
        "entityName": "jane.doe@example.com",
        "entitySourceId": "09B9A9B0-ABCD-1234-ABCD-65766D33B05E",
        "entityClass": "user"
      },
      {
        "entityName": "Example Role",
        "entitySourceId": "09B9A9B0-ABCD-1234-ABCD-65766D33B05E",
        "entityClass": "role"
      }
    ],
    "accessRules": {
      "days": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "fromTime": null,
      "toTime": null,
      "maxSessionDuration": 1,
      "timeZone": "America/New_York"
    }
  }
  ```
  
  ### Error Codes
  |code|Description|
  |-----|:---------------|
  |200|Job Status|
  |400|Missing jobId parameter|
  |404|Job Not Found|
  |500|Internal Server Error|
}
