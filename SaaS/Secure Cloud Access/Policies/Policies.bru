meta {
  name: Policies
  type: http
  seq: 1
}

get {
  url: https://{{identityTenantName}}.sca.cyberark.cloud/api/policies
  body: none
  auth: none
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Sets Policy ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('policy_id', res.body.hits[0].policyId);
    tools.log('Policy Id: ' + bru.getVar('policy_id'))
  }
  
  // Log on error
  if (res.status != 200) {
    if (res.body.code) {
      tools.log('Code: ' + res.body.code);
    }
    if (res.body.message) {
      tools.log('Message: ' + res.body.message);
    }
    if (res.body.description) {
      tools.log('Description: ' + res.body.description);
    }
    if (res.body.details) {
      tools.log('Details: ' + res.body.details);
    }
  }
}

docs {
  
  
  
  
  
  ### Example Response
  ```
  {
    "job_id": "e96362d5-f6b8-4edc-8586-3827625f8033",
    "operation": "RESCAN_REQUEST_ORCHESTRATOR",
    "status": "InProgress",
    "last_updated": "2024-10-01T19:53:07Z",
    "already_running": true
  }
  ```
  
  ### Error Codes
  |code|Description|
  |-----|:---------------|
  |200|Job Status|
  |400|Missing jobId parameter|
  |404|Job Not Found|
  |500|Internal Server Error|
}
