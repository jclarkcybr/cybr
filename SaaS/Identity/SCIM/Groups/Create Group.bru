meta {
  name: Create Group
  type: http
  seq: 2
}

post {
  url: https://{{identityTenantId}}.id.cyberark.cloud/scim/v2/groups
  body: json
  auth: none
}

body:json {
  {
    "displayName": "scim_created_group",
    "members": [
      {
        "display": "Bru API Testing",
        "value": "7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "$ref":"https://{{identityTenantId}}.id.cyberark.cloud/Scim/v2/Groups/7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "type":"Group"
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:schemas:core:2.0:Group"
    ]
  }
}

vars:pre-request {
  groupName: Test1234
  ~userId: edb4424d-ec39-45ec-a888-ec224aa2af6d
}

assert {
  res.status: eq 201
}

script:pre-request {
  // Perform authentication usings scimAuth.js tools
  const scimAuth = require('./tools/scimAuth');
  await scimAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Sets group_id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('group_id', res.body.id);
    tools.log('SCIM Group Id: ' + bru.getVar('group_id'))
  }
}

docs {
  ## Create Group
  This api provisions new group(role) to CyberArk Cloud Directory.
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/scim/v2/groups
  
  ### Request Details
  #### Request Method
  | HTTP Method | POST |
  | :-- | :-- |
  
  #### Example URI
  > POST https://abc1234.id.cyberark.cloud/scim/v2/groups
  
  #### Request Body Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | displayName | string | yes | Group unique display name. |
  | members | array of JSON objects | no | members of the group |
  | schemas | array of strings | no | group core schema(urn:ietf:params:scim:schemas:core:2.0:Group) |
  
  #### Request Body Example
  ```
  {
    "displayName": "scim_created_group",
    "members": [
      {
        "display": "Bru API Testing",
        "value": "7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "$ref":"https://abc1234.id.cyberark.cloud/Scim/v2/Groups/7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "type":"group",
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:schemas:core:2.0:Group"
    ]
  }
  ```
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  | 401 | Not Authorized |
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "members": [
      {
        "value": "7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "$ref": "https://abc1234.id.cyberark.cloud/Scim/v2/Groups/7a7ca1f5_6370_4ba4_ba8d_1d69161d461d",
        "type": "Group",
        "display": "Bru API Testing"
      }
    ],
    "displayName": "scim_created_group",
    "schemas": [
      "urn:ietf:params:scim:schemas:core:2.0:Group"
    ],
    "id": "7e54b9fa_4ca0_45a0_96e1_acbdb26abd31",
    "meta": {
      "resourceType": "Group",
      "created": "2024-10-18T18:25:49.2051063Z",
      "lastModified": "2024-10-18T18:25:49.2051063Z",
      "location": "https://abc1234.id.cyberark.cloud/Scim/v2/Groups/7e54b9fa_4ca0_45a0_96e1_acbdb26abd31"
    }
  }
  ```
  
  #### 404 Not Found
  ```
  {
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:Error"
    ],
    "status": "404",
    "detail": "Member not found. Member value: privilege_cloud_users_id"
  }
  ```
  
  
}
