meta {
  name: Patch Group
  type: http
  seq: 5
}

patch {
  url: https://{{identityTenantId}}.id.cyberark.cloud/scim/v2/groups/{{group_id}}
  body: json
  auth: none
}

body:json {
  {
    "Operations": [
      {
        "op": "add",
        "path": "members",
        "value": [
          {
            "displayName":"Bru User (API Testing)",
            "value": "{{user_id}}",
            "$ref": "https://{{identityTenantId}}.id.cyberark.cloud/Scim/v2/Users/{{user_id}}",
            "type": "User" 
          }
        ]
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    ]
  }
}

vars:pre-request {
  user_id: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const scimAuth = require('./tools/scimAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings scimAuth.js tools
  await scimAuth.login();
  
  // Sets user_id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('user_id', bru.getEnvVar('testIdentityUserId'));
    tools.log('SCIM User Id: ' + bru.getVar('user_id'))
  }
}

docs {
  ## Update Group with patch
  This endpoint is used to update one or more attributes of a Group resource using a sequence of operations to "add", "remove", or "replace" values.
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/scim/v2/groups/{group_id}
  
  ### Request Details
  #### Request Method
  | HTTP Method | PATCH |
  | :-- | :-- |
  
  #### Example URI
  > PATCH https://abc1234.id.cyberark.cloud/scim/v2/groups/7a7ca1f5_6370_4ba4_ba8d_1d69161d461d
  
  #### Request URI Body Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | group_id | string | yes | Unique group id (id attribute) generated by the SCIM server. |
  
  #### Required Request Body Parameters
  | Parameter | Type | Description |
  | :-- | :-- | :-- | 
  | operations | object | Specify the array of add, remove, replace operations that should be used to update the information. You can include any number of operations in one request. |
  | schemas | array of strings |  User core schema -urn:ietf:params:scim:schemas:core:2.0:User Extended schema - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User Custom schema - urn:scim:schemas:extension:custom:2.0 |
  
  > **NOTE**
  > - op is always required. Valid options are add, remove, replace
  > - path is only required for "remove" op. 
  > - value is required if op is "add" or "replace"
  
  #### Request Body Example
  ```
  {
    "Operations": [
      {
        "op": "add",
        "path": "members",
        "value": [
          {
            "displayName":"Bru User (API Testing)",
            "value": "f627ca71-4bee-4de1-98be-11aed9f06808",
            "$ref": "https://abc1234.id.cyberark.cloud/Scim/v2/Users/f627ca71-4bee-4de1-98be-11aed9f06808",
            "type": "User" 
          }
        ]
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    ]
  }
  ```
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  | 400 | Bad Request |
  | 401 | Not Authorized |
  | 404 | Not Found |
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "members": [
      {
        "value": "f627ca71-4bee-4de1-98be-11aed9f06808",
        "$ref": "https://abc1234.id.cyberark.cloud/Scim/v2/Groups/f627ca71-4bee-4de1-98be-11aed9f06808",
        "type": "Group",
        "display": "Bru API Testing"
      },
      {
        "value": "f627ca71-4bee-4de1-98be-11aed9f06808",
        "$ref": "https://abc1234.id.cyberark.cloud/Scim/v2/Users/f627ca71-4bee-4de1-98be-11aed9f06808",
        "type": "User",
        "display": "bru.user@example.com"
      }
    ],
    "displayName": "scim_created_group_update",
    "schemas": [
      "urn:ietf:params:scim:schemas:core:2.0:Group"
    ],
    "id": "97498441_58ca_4540_9ed8_44c5ffdf3881",
    "meta": {
      "resourceType": "Group",
      "created": "2024-10-18T18:51:58.2185591Z",
      "lastModified": "2024-10-18T18:51:58.2185591Z",
      "location": "https://abc1234.id.cyberark.cloud/Scim/v2/Groups/97498441_58ca_4540_9ed8_44c5ffdf3881"
    }
  }
  ```
  
  #### 404 Not Found
  ```
  {
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:Error"
    ],
    "status": "404",
    "detail": "Group not found"
  }
  ```
  
  #### 500 Internal Server Error
  ```
  {
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:Error"
    ],
    "status": "500",
    "detail": "Cannot deserialize the current JSON object (e.g. {\"name\":\"value\"}) into type 'System.Collections.Generic.List`1[Cloud.Provisioning.Scim.CloudGroupResource+GroupMember]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath 'value', line 2, position 10. "
  }
  ```
  
}
