meta {
  name: Schemas by id
  type: http
  seq: 4
}

get {
  url: https://{{identityTenantId}}.id.cyberark.cloud/scim/v2/Schemas/{{id}}
  body: none
  auth: none
}

vars:pre-request {
  id: User
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  // Perform authentication usings scimAuth.js tools
  const scimAuth = require('./tools/scimAuth');
  await scimAuth.login();
}

docs {
  ## Schemas by id
  - This endpoint "/Schemas/{id}" returns individual resource schema.
  - Include the bearer token in the header for authorization when making requests to this endpoint.
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/scim/v2/Schemas/{id}
  
  ### Request Details
  #### Request Method
  | HTTP Method | GET |
  | :-- | :-- |
  
  #### URI Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | id | string | yes | Unique schema id (id attribute) generated by the SCIM server. **Examples:** User, Container, Group, etc |
  
  #### Example URI
  > GET https://abc1234.id.cyberark.cloud/scim/v2/Schemas/User
  
  #### Request Body
  None
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  | 401 | Not Authorized |
  | 500 | Internal Server Error |
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "name": "User",
    "description": "User Account",
    "attributes": [
      {
        "name": "name",
        "type": "complex",
        "subAttributes": [
          {
            "name": "formatted",
            "type": "string",
            "multiValued": false,
            "description": "The full name, formatted for display.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "familyName",
            "type": "string",
            "multiValued": false,
            "description": "The family name of the User, or last name.",
            "required": false,
            "caseExact": false,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "givenName",
            "type": "string",
            "multiValued": false,
            "description": "The given name of the User, or first name.",
            "required": false,
            "caseExact": false,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none"
          }
        ],
        "multiValued": false,
        "description": "The components of the user's real name.",
        "required": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "displayName",
        "type": "string",
        "multiValued": false,
        "description": "The name of the User, suitable for display to end-users.",
        "required": false,
        "caseExact": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "preferredLanguage",
        "type": "string",
        "multiValued": false,
        "description": "Indicates the User's preferred written or spoken language. e.g., 'en_US'.",
        "required": false,
        "caseExact": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "active",
        "type": "boolean",
        "multiValued": false,
        "description": "Whether or not the user is active.",
        "required": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "password",
        "type": "string",
        "multiValued": false,
        "description": "The User's cleartext password. This attribute is intended to be used as a means to specify an initial password when creating a new User or  to reset an existing User's password.",
        "required": false,
        "caseExact": false,
        "mutability": "writeOnly",
        "returned": "never",
        "uniqueness": "none"
      },
      {
        "name": "emails",
        "type": "complex",
        "subAttributes": [
          {
            "name": "type",
            "type": "string",
            "multiValued": false,
            "description": "A label indicating the email's type, e.g., 'work' or 'home' or 'other'.",
            "required": false,
            "canonicalValues": [
              "Work"
            ],
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "primary",
            "type": "boolean",
            "multiValued": false,
            "description": "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred mailing address or primary email address.",
            "required": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "value",
            "type": "string",
            "multiValued": false,
            "description": "Email addresses for the user.",
            "required": false,
            "caseExact": false,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none"
          }
        ],
        "multiValued": true,
        "description": "Email addresses for the user.",
        "required": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "phoneNumbers",
        "type": "complex",
        "subAttributes": [
          {
            "name": "type",
            "type": "string",
            "multiValued": false,
            "description": "A label indicating the phonenumber's type, e.g., 'work', 'home', 'mobile'.",
            "required": false,
            "canonicalValues": [
              "work",
              "home",
              "mobile"
            ],
            "caseExact": false,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "value",
            "type": "string",
            "multiValued": false,
            "description": "Phone number of the User.",
            "required": false,
            "caseExact": false,
            "mutability": "readWrite",
            "returned": "default",
            "uniqueness": "none"
          }
        ],
        "multiValued": true,
        "description": "Phone numbers for the User.",
        "required": false,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "groups",
        "type": "complex",
        "subAttributes": [
          {
            "name": "type",
            "type": "string",
            "multiValued": false,
            "description": "A label indicating the group's type.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "display",
            "type": "string",
            "multiValued": false,
            "description": "A human-readable name, primarily used for display purposes.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "value",
            "type": "string",
            "multiValued": false,
            "description": "The identifier of the User's group.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "$ref",
            "type": "string",
            "multiValued": false,
            "description": "The URI of the corresponding 'Group' resource to which the user belongs.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none",
            "referenceTypes": [
              "Group"
            ]
          }
        ],
        "multiValued": true,
        "description": "A list of groups to which the user belongs.",
        "required": false,
        "mutability": "readOnly",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "userName",
        "type": "string",
        "multiValued": false,
        "description": "Unique identifier for the User.",
        "required": true,
        "caseExact": true,
        "mutability": "readWrite",
        "returned": "default",
        "uniqueness": "server"
      },
      {
        "name": "schemas",
        "type": "string",
        "multiValued": true,
        "description": "Defines the model which is used. Can be more than one.",
        "required": true,
        "caseExact": true,
        "mutability": "readOnly",
        "returned": "default",
        "uniqueness": "none"
      },
      {
        "name": "id",
        "type": "string",
        "multiValued": false,
        "description": "Unique identifier for the User.",
        "required": true,
        "caseExact": true,
        "mutability": "readOnly",
        "returned": "always",
        "uniqueness": "server"
      },
      {
        "name": "meta",
        "type": "complex",
        "subAttributes": [
          {
            "name": "resourceType",
            "type": "string",
            "multiValued": false,
            "description": "The name of the resource type of the resource.",
            "required": true,
            "caseExact": true,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "created",
            "type": "dateTime",
            "multiValued": false,
            "description": "The DateTime that the resource was added to the service provider. This attribute MUST be a DateTime.",
            "required": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "lastModified",
            "type": "dateTime",
            "multiValued": false,
            "description": "The most recent DateTime that the details of this resource were updated at the service provider.",
            "required": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "none"
          },
          {
            "name": "location",
            "type": "string",
            "multiValued": false,
            "description": "The URI of the resource being returned.",
            "required": false,
            "caseExact": false,
            "mutability": "readOnly",
            "returned": "default",
            "uniqueness": "server"
          }
        ],
        "multiValued": false,
        "description": "A complex attribute containing resource metadata.",
        "required": true,
        "mutability": "readOnly",
        "returned": "default",
        "uniqueness": "none"
      }
    ],
    "id": "urn:ietf:params:scim:schemas:core:2.0:User",
    "meta": {
      "resourceType": "Schema",
      "created": "2024-10-18T17:05:22.3596307Z",
      "lastModified": "2024-10-18T17:05:22.3596307Z",
      "location": "https://abc1234.id.cyberark.cloud/Scim/v2/Schemas/User"
    }
  }
  ```
  
  #### 500 Internal Server Error
  ```
  {
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:Error"
    ],
    "status": "500",
    "detail": "Object reference not set to an instance of an object. "
  }
  ```
  
}
