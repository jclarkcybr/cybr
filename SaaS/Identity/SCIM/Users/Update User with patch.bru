meta {
  name: Update User with patch
  type: http
  seq: 5
}

patch {
  url: https://{{identityTenantId}}.id.cyberark.cloud/scim/v2/users/{{user_id}}
  body: json
  auth: none
}

body:json {
  {
    "Operations": [
      {
        "op": "replace",
        "value": {
          "name.formatted":"scim.user.example2"
        }
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    ]
  }
}

vars:pre-request {
  ~userId: f134e89d-bdb5-4f0c-baa1-0d54ae91606d
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  // Perform authentication usings scimAuth.js tools
  const scimAuth = require('./tools/scimAuth');
  await scimAuth.login();
}

docs {
  ## Update user with patch
  This endpoint is used to update one or more attributes of a User resource using a sequence of operations to "add", "remove", or "replace" values. * Refer this link to know more about SCIM PATCH Operation.
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/scim/v2/users/{user_id}
  
  ### Request Details
  #### Request Method
  | HTTP Method | PATCH |
  | :-- | :-- |
  
  #### URI Parameters
  | Parameter | Type | Location | Description |
  | :-- | :-- | :-- | :-- |
  | user_id | string | path | Unique user id (id attribute) generated by the SCIM server. |
  
  
  #### Example URI
  > PATCH https://abc1234.id.cyberark.cloud/scim/v2/users/3639c48b-9b0c-4017-ba10-bf5fb70cfb3d
  
  #### Required Request Body Parameters
  | Parameter | Type | Description |
  | :-- | :-- | :-- | 
  | operations | object | Specify the array of add, remove, replace operations that should be used to update the information. You can include any number of operations in one request. |
  | schemas | array of strings |  User core schema -urn:ietf:params:scim:schemas:core:2.0:User Extended schema - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User Custom schema - urn:scim:schemas:extension:custom:2.0 |
  
  > **NOTE**
  > - op is always required. Valid options are add, remove, replace
  > - path is only required for "remove" op. 
  > - value is required if op is "add" or "replace"
  
  #### Request Body Example
  ```
  {
    "Operations": [
      {
        "op": "replace",
        "value": {
          "name.formatted":"scim.user.example2"
        }
      }
    ],
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    ]
  }
  ```
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  | 400 | Bad Request |
  | 401 | Not Authorized |
  | 404 | Not Found | 
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "name": {
      "formatted": "scim.user.example2"
    },
    "displayName": "scim.user.example2",
    "active": false,
    "userName": "scim.user.example.updated@example.com",
    "schemas": [
      "urn:ietf:params:scim:schemas:core:2.0:User"
    ],
    "id": "f627ca71-4bee-4de1-98be-11aed9f06808",
    "meta": {
      "resourceType": "User",
      "created": "2024-10-18T17:50:34.6451432Z",
      "lastModified": "2024-10-18T17:50:34.6451432Z",
      "location": "https://abc1234.id.cyberark.cloud/Scim/v2/Users/f627ca71-4bee-4de1-98be-11aed9f06808"
    }
  }
  ```
  
  #### 400 Bad Request
  ```
  {
    "schemas": [
      "urn:ietf:params:scim:api:messages:2.0:Error"
    ],
    "status": "400",
    "scimType": "noTarget",
    "detail": "The specified \"path\" did not yield an attribute or attribute value that could be operated on."
  }
  ```
}
