meta {
  name: Delete users
  type: http
  seq: 1
}

post {
  url: https://{{identityTenantId}}.id.cyberark.cloud/UserMgmt/RemoveUsers
  body: json
  auth: none
}

body:json {
  {
    "Users": [
      "4f59cf2f-e1b8-4ea7-9547-cc2836e17edf"
    ]
  }
}

vars:pre-request {
  user_id: 3639c48b-9b0c-4017-ba10-bf5fb70cfb3d
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets user_id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('user_id', bru.getEnvVar('testIdentityUserId'));
    tools.log('User Id: ' + bru.getVar('user_id'))
  }
}

docs {
  ## Delete users
  You must be a system administrator or have user management permissions. Will delete cloud users. Users for other directory services are only removed from the cloud. This API will fail if any of the ids specified are the current user.
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/UserMgmt/RemoveUsers
  
  ### Request Details
  #### Request Method
  | HTTP Method | POST |
  | :-- | :-- |
  
  #### Example URI
  > POST https://abc1234.id.cyberark.com/UserMgmt/RemoveUsers
  
  #### Request Body
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | Users | array of strings | yes | List of user UUIDs to delete |
  
  
  #### Request Body Example
  ```
  {
    "Users": [
      "4f59cf2f-e1b8-4ea7-9547-cc2836e17edf"
    ]
  }
  ```
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "success": true,
    "Result": null,
    "Message": null,
    "MessageID": null,
    "Exception": null,
    "ErrorID": null,
    "ErrorCode": null,
    "IsSoftError": false,
    "InnerExceptions": null
  }
  ```
  
  
}
