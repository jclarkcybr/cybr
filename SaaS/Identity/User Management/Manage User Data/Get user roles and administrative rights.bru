meta {
  name: Get user roles and administrative rights
  type: http
  seq: 6
}

post {
  url: https://{{identityTenantId}}.id.cyberark.cloud/UserMgmt/GetUsersRolesAndAdministrativeRights
  body: json
  auth: none
}

body:json {
  {
    "ID": "{{user_id}}"
  }
  
}

vars:pre-request {
  user_id: 3639c48b-9b0c-4017-ba10-bf5fb70cfb3d
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets user_id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('user_id', bru.getEnvVar('testIdentityUserId'));
    tools.log('User Id: ' + bru.getVar('user_id'))
  }
}

docs {
  ## Get user roles and administrative rights
  
  ### URL
  https://<tenantShortId>.id.cyberark.com/UserMgmt/GetUsersRolesAndAdministrativeRights
  
  ### Request Details
  #### Request Method
  | HTTP Method | POST |
  | :-- | :-- |
  
  #### Example URI
  > POST https://abc1234.id.cyberark.com/UserMgmt/GetUsersRolesAndAdministrativeRights
  
  #### Request Body
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | ID | string | yes | The Unique Id of the Cloud user to fetch. The unique ID is generated when the user is created. Ex: 3639c48b-9b0c-4017-ba10-bf5fb70cfb3d 
  
  #### Request Body Example
  ```
  {
    "ID":"3639c48b-9b0c-4017-ba10-bf5fb70cfb3d"
  }
  ```
  
  ### Response Details
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | Success |
  
  ### Example Responses
  #### 200 OK
  ```
  {
    "success": true,
    "Result": {
      "IsAggregate": false,
      "Count": 2,
      "Columns": [
        {
          "Name": "ID",
          "IsHidden": false,
          "DDName": null,
          "Title": "ID",
          "DDTitle": null,
          "Description": null,
          "Type": 12,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "Name",
          "IsHidden": false,
          "DDName": null,
          "Title": "Name",
          "DDTitle": null,
          "Description": null,
          "Type": 12,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "Description",
          "IsHidden": false,
          "DDName": null,
          "Title": "Description",
          "DDTitle": null,
          "Description": null,
          "Type": 12,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "AdministrativeRights",
          "IsHidden": false,
          "DDName": null,
          "Title": "AdministrativeRights",
          "DDTitle": null,
          "Description": null,
          "Type": 16,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "Role",
          "IsHidden": false,
          "DDName": null,
          "Title": "Role",
          "DDTitle": null,
          "Description": null,
          "Type": 12,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "RoleName",
          "IsHidden": false,
          "DDName": null,
          "Title": "RoleName",
          "DDTitle": null,
          "Description": null,
          "Type": 12,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        },
        {
          "Name": "OrgPath",
          "IsHidden": false,
          "DDName": null,
          "Title": "OrgPath",
          "DDTitle": null,
          "Description": null,
          "Type": 0,
          "Format": null,
          "Width": 0,
          "TableKey": null,
          "ForeignKey": null,
          "TableName": null
        }
      ],
      "FullCount": 2,
      "Results": [
        {
          "Entities": [
            {
              "Type": "Role",
              "Key": "Everybody",
              "IsForeignKey": false
            }
          ],
          "Row": {
            "RoleName": "Everybody",
            "Name": "Everybody",
            "ID": "Everybody",
            "AdministrativeRights": [],
            "OrgPath": null,
            "Description": "All authenticated users",
            "Role": "Everybody"
          }
        },
        {
          "Entities": [
            {
              "Type": "Role",
              "Key": "Privilege_Cloud_Users_ID",
              "IsForeignKey": false
            }
          ],
          "Row": {
            "RoleName": "Privilege Cloud Users",
            "Name": "Privilege Cloud Users",
            "ID": "Privilege_Cloud_Users_ID",
            "AdministrativeRights": [
              {
                "Description": "Show Privileged Cloud Tile",
                "Path": "ServiceRight/passwordvaultShowTile",
                "ServiceName": "Privilege Cloud"
              }
            ],
            "OrgPath": null,
            "Description": "Views and connects to assigned Privilege Cloud accounts",
            "Role": "Privilege_Cloud_Users_ID"
          }
        }
      ],
      "ReturnID": ""
    },
    "Message": null,
    "MessageID": null,
    "Exception": null,
    "ErrorID": null,
    "ErrorCode": null,
    "IsSoftError": false,
    "InnerExceptions": null
  }
  ```
  
  
}
