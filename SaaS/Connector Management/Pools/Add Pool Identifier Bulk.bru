meta {
  name: Add Pool Identifier Bulk
  type: http
  seq: 8
}

post {
  url: https://{{identityTenantName}}.connectormanagement.cyberark.cloud/api/pool-service/pools/{{pool_id}}/identifiers-bulk
  body: json
  auth: none
}

body:json {
  {
    "requests": {
      "one":
        {
          "type":"GENERAL_FQDN",
          "value":"examplenew.example.com"
        },
      "two":
        {
          "type":"AWS_VPC",
          "value":"vpc-0128764971924aab2"
        }
    }
  }
  
}

assert {
  res.status: eq 207
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Sets Identifiers for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('identifier_id_one', res.body.responses.one.body.id);
    bru.setVar('identifier_id_two', res.body.responses.two.body.id);
    tools.log('Identifier Id One: ' + bru.getVar('identifier_id_one'))
    tools.log('Identifier Id Two: ' + bru.getVar('identifier_id_two'))
  }
  
  // Log on error
  if (res.status != 200) {
    if (res.body.code) {
      tools.log('Code: ' + res.body.code);
    }
    if (res.body.message) {
      tools.log('Message: ' + res.body.message);
    }
    if (res.body.description) {
      tools.log('Description: ' + res.body.description);
    }
    if (res.body.details) {
      tools.log('Details: ' + res.body.details);
    }
  }
}

docs {
  ## Bulk Add Pool Identifier
  Adds the given pool identifiers See a list of identifier types using the "List Pool Identifier Types" API endpoint.
  
  ## URL
  https://<subdomain>.connectormanagement.cyberark.com/api/pool-service/pools/{pool_id}/identifiers
  
  ### Resource Information
  | HTTP Method | POST |
  | :-- | :-- |
  | Content Type | application/json  |
  
  ### Header Parameters
  | Parameter | Description |
  | :-- | :-- |
  | Authorization | The token that identifies the session, encoded in BASE 64.  |
  
  ### Example Request Body
  ```
  {
    "requests": {
      "one":
        {
          "type":"GENERAL_FQDN",
          "value":"exmple.example.com"
        },
      "two":
        {
          "type":"AWS_VPC",
          "value":"vpc-0428764971924aab2"
        }
    }
  }
  ```
  
  ### Example Response Body
  ```
  {
    "responses": {
      "one": {
        "statusCode": 201,
        "body": {
          "id": "6430b008-02ca-49e5-be1e-890f6fef4d4e",
          "createdAt": "2024-10-15T15:21:19.000+00:00",
          "updatedAt": "2024-10-15T15:21:19.000+00:00",
          "poolId": "e07c8e99-ee4e-4b4f-b2cc-dd7ef50646f6",
          "type": "GENERAL_FQDN",
          "value": "example.example.com"
        }
      },
      "two": {
        "statusCode": 201,
        "body": {
          "id": "636adb57-265a-4be5-9125-dbf9a95044ed",
          "createdAt": "2024-10-15T15:21:19.000+00:00",
          "updatedAt": "2024-10-15T15:21:19.000+00:00",
          "poolId": "e07c8e99-ee4e-4b4f-b2cc-dd7ef50646f6",
          "type": "AWS_VPC",
          "value": "vpc-0438764971924aab2"
        }
      }
    }
  }
  ```
  
  ### *Status Codes 207, 400, 401, 403, and 500*
  ```
  {
    "code": "string",
    "message": "string",
    "description": "",
    "details": ""
  }
  ```
}
