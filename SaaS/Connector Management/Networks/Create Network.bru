meta {
  name: Create Network
  type: http
  seq: 2
}

post {
  url: https://{{identityTenantName}}.connectormanagement.cyberark.cloud/api/pool-service/networks
  body: json
  auth: none
}

body:json {
  {
    "name":"exampleNetworkNameTesting"
  }
}

assert {
  res.status: eq 201
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Sets Pool ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('network_id', res.body.id);
    tools.log('Network Id: ' + bru.getVar('network_id'))
  }
  
  // Log on error
  if (res.status != 200) {
    if (res.body.code) {
      tools.log('Code: ' + res.body.code);
    }
    if (res.body.message) {
      tools.log('Message: ' + res.body.message);
    }
    if (res.body.description) {
      tools.log('Description: ' + res.body.description);
    }
    if (res.body.details) {
      tools.log('Details: ' + res.body.details);
    }
  }
}

docs {
  ## Create network
  Creates a network
  
  ## URL
  https://<subdomain>.connectormanagement.cyberark.com/api/pool-service/networks
  
  ### Resource Information
  | HTTP Method | POST |
  | :-- | :-- |
  | Content Type | application/json  |
  
  ### Header Parameters
  | Parameter | Description |
  | :-- | :-- |
  | Authorization | The token that identifies the session, encoded in BASE 64.  |
  
  ### Example Request
  ```
  {
    "name":"exampleNetworkNameTesting"
  }
  ```
  
  ### Example Response
  ```
  {
    "id": "0e00afc0-7e0d-43d3-98aa-4622a9bb4789",
    "createdAt": "2024-10-15T14:30:02.000+00:00",
    "updatedAt": "2024-10-15T14:30:02.000+00:00",
    "name": "exampleNetworkName"
  }
  ```
  
  ### *Status Codes 201, 400, 401, 403, 409 and 500*
  ```
  {
    "code": "string",
    "message": "string",
    "description": "",
    "details": ""
  }
  ```
}
