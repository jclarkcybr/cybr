meta {
  name: Get secrets filter by id
  type: http
  seq: 2
}

get {
  url: https://{{identityTenantName}}.secretshub.cyberark.cloud/api/secret-stores/{{storeId}}/filters/{{filterId}}
  body: none
  auth: none
}

vars:pre-request {
  storeId: store-406cfa83-80e7-44ac-abb2-53f0fe5da753
  filterId: filter-b2df4e9f-3eb4-4b90-8a28-edc0ac743e87
}

assert {
  res.body: isJson
  res.status: eq 200
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.code) {
      tools.log('Code: ' + res.body.code);
    }
    if (res.body.message) {
      tools.log('Message: ' + res.body.message);
    }
    if (res.body.description) {
      tools.log('Description: ' + res.body.description);
    }
  }
}

docs {
  ## Get all secrets filters
  
  Get a specific secrets filter by a unique identifier.
  
  ### Endpoint
  ```
  https://subdomain.secretshub.cyberark.cloud/api/secret-stores/{store-id}/filters
  ```
  
  ### Method
  GET
  
  ### Example Response Body
  ```
  {
    "id": "filter-5a05468b-fa58-4bcf-84e9-62ede8af55f4",
    "type": "PAM_SAFE",
    "data": {
      "safeName": "MySafe"
    },
    "createdAt": "2023-07-06T15:41:15.452000",
    "updatedAt": "2023-07-06T15:41:15.452000",
    "createdBy": "user@example.com",
    "updatedBy": "user@example.com"
  }
  ```
  
  ### Error Response Body
  ```
  {
    "code": "SSAS0016E",
    "message": "\nSecret Store behaviors ['SECRETS_TARGET'] does not support filter.\nSupported behavior: \"SECRETS_SOURCE\", Secret Store Id: \"store-02885616-9d12-4fea-a7e2-1dd38ee8c7ee\".\n"
    "description": ""
  }
  ```
  
  ### Response Codes
  |code|Description|
  |-----|:---------------|
  |200|Success|
  |400|Bad Request|
  |401|Unauthorized|
  |403|Forbidden|
  |404|Not Found|
  |500|Internal Server Error|
}
