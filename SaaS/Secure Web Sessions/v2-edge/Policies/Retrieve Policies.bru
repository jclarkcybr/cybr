meta {
  name: Retrieve Policies
  type: http
  seq: 1
}

get {
  url: https://{{swsBaseUrl}}/v2-edge/sws/policies/
  body: none
  auth: none
}

query {
  ~searchString: 
  ~isRefresh: false
  ~offset: 0
  ~limit: 100
}

assert {
  res.body: isJson
  res.status: eq 200
}

script:pre-request {
  const swsAuth = require('./tools/swsAuth');
  
  // Perform authentication usings remoteAccessAuth.js tools
  await swsAuth.login();
}

script:post-response {
  const tools = require('./tools/tools');
  
  // Sets SWS Policy ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    if (res.body.policies[0].id) {
      bru.setVar('swsPolicyId', res.body.policies[0].id);
      tools.log('SWS Policy Id Set: ' + bru.getVar('swsPolicyId'))
    }
  }
}

docs {
  ## Get SWS Tenant's Policies
  Get list of SWS Activities, happened between specified period
  
  ### URL
  https://api.alero.io/v2-edge/sws/policies/
  
  #### Resource Information
  | HTTP Method | GET |
  | :-- | :-- |
  
  #### URL Query Parameters
  | Parameter | Type | Mandatory | Description | 
  | :-- | :-- | :-- | :-- |
  | searchString | string | no | | 
  | isRefresh |  boolean | no |  | 
  | offset | integer | no | Starting activity offset. Default: 0 |
  | limit | integer | no | Limit number or returned Activities. Default: 100 | 
  
  ### Request
  #### Request Header
  | Request Header | Field Definition |
  | :-- | :-- |
  | Authorization | Bearer eyEXAMPLErQ |
  
  #### Request Body
  None
  
  ### Response
  
  #### Status Codes 
  | Code | Description |
  | :-- | :-- |
  | 200 | OK |
  | 400 | Custom Error |
  | 401 | Unauthorized |
  | 404 | Not Found |
  | 500 | Internal Server Error |
  
  #### 200 OK
  ```
  {
    "policies": [
      {
        "policyId": "string",
        "name": "string",
        "description": "string",
        "appKey": "string",
        "active": true
      }
    ],
    "totalCount": 0,
    "lastUpdate": 0
  }
  ```
}
